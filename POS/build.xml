<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="SETeam42014" default="build">

	<!-- Definitions of variables used during the rest of this script -->
	
	<!-- Definitions are loaded from file "application.properties" -->
	<property file="application.properties"/>
	
	<!-- Definitions of classpath variants used for different tasks -->

	<!-- http://tlrobinson.net/blog/2008/11/ant-tasks-for-git/ -->
	<macrodef name = "git">
	    <attribute name = "command" />
	    <attribute name = "dir" default = "" />
	    <element name = "args" optional = "true" />
	    <sequential>
	        <echo message = "git @{command}" />
	        <exec executable = "git" dir = "@{dir}">
	            <arg value = "@{command}" />
	            <args/>
	        </exec>
	    </sequential>
	</macrodef>
	
	<path id="compile.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${lib.hibernate.dir}">
		    <include name="*.jar"/>
		</fileset>
	</path>

	<path id="test.classpath">
		<pathelement location="${build.classes.dir}"/>
		<!-- configuration -->
		<pathelement location="${conf.dir}"/>
		<!-- Include libraries from "lib" folder-->
		<fileset dir="lib">
			<include name="*.jar"/>
		</fileset>
		<pathelement location="${basedir}"/>
		<!-- Includes application properties -->
		<fileset dir="">
			<include name="*.properties"/>
		</fileset>
	</path>
	
	<path id="run.classpath">
			<pathelement location="${build.classes.dir}"/>
			<!-- configuration -->
			<pathelement location="${conf.dir}"/>
			<!-- Include libraries from "lib" folder-->
			<fileset dir="${lib.dir}">
				<include name="*.jar"/>
			</fileset>
			<fileset dir="${lib.hibernate.dir}">
				<include name="*.jar"/>
			</fileset>
			<pathelement location="${basedir}"/>
			<!-- Includes application properties -->
			<fileset dir="">
				<include name="*.properties"/>
			</fileset>
		</path>
		

	<!-- Definitions of runnable ant targets.
         Run them from the command line by executing "ant [targetname]"  -->
	
	<!-- "run" target -->
	<target name="run" depends="build" description="Run the application">
		<java 
			classname="${application.main.class}" 
			classpathref="run.classpath"
			fork="true" >
			<jvmarg value="-Xdebug" />
		    <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044" />
			<jvmarg value="-Xnoagent"/>
			<jvmarg value="-Djava.compiler=NONE"/>
		</java>
	</target>
	<!-- "build" target -->
	<target name="build" description="Build the system">
		<!-- Creates needed directories -->
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.classes.dir}"/>
		<!-- Creates code -->
		<javac
            srcdir="${src.dir}"
            destdir="${build.classes.dir}"
            debug="true"
            debuglevel="lines,vars,source"
            encoding="utf-8"
            compiler="modern"
            target="1.7"
            source="1.7"
			includeantruntime="false">
			<classpath refid="compile.classpath"/>
		</javac>
	</target>

	<!-- Build internal documentation -->
	<!-- Directly copied from demo, not changed -->
	<target name="javadoc" description="Build internal documentation">
		<mkdir dir="${doc.dir}"/>
		<javadoc destdir="${doc.dir}" classpathref="compile.classpath">
			<fileset dir="${src.dir}" includes="**/*.java"/>
		</javadoc>
	</target>

	<!-- Clean up build system results -->
	<target name="clean" description="Clean up build system results">
		<delete dir="${build.dir}"/>
	</target>
	
	<!-- "dist" target -->
	<!-- Create JAR file in the folder "build/jar" with all classes, 
			two property files and other components -->
	<target name="dist" depends="build" description="Build project to JAR">
		<!-- Increments version number -->
		<propertyfile
			file="version.properties"
			jdkproperties="true"
			comment="Version properties">
			<entry  key="build.revision.number" type="int" default="0" operation="+"/>
			</propertyfile>
		<!-- Reads new version number -->
		<loadproperties>
			<file file="version.properties"/>
		</loadproperties>
		<!-- Writes new full version number -->
		<propertyfile 
			file="version.properties"
			jdkproperties="true">
			<entry  key="build.number" type="string" value="${build.major.number}.${build.minor.number}.${build.revision.number}"/>
		</propertyfile>
		<!-- Creates JAR directory -->
		<mkdir dir="${build.jar.dir}"/>
		<!-- Creates JAR file -->
		<jar destfile="${build.jar.dir}/${team.name}.jar">
			<!-- Include classes -->
			<fileset dir="${build.classes.dir}"/>
			<!-- Include properties files -->
			<fileset dir="${basedir}/" includes="*.properties"/>
			<!-- Include etc directory -->
			<fileset dir="${etc.dir}"/>
			<!-- Include configuration directory ("conf") -->
			<fileset dir="${conf.dir}"/>
			<!-- Include jar-s from lib/ -->
			<zipgroupfileset dir="${lib.hibernate.dir}" includes="**/*.jar"/>
			<zipgroupfileset dir="${lib.dir}" includes="**/*.jar"/>
			<manifest>
				<attribute name="Main-Class" 
					value="${application.main.class}"/>
			</manifest>
		</jar>
	</target>
	
	<!-- JAR run target -->
	<target name="jrun" depends="dist" description="Builds and runs JAR file">
		<!-- Runs jar file -->
		<java jar="${build.jar.dir}/${team.name}.jar" fork="yes"/>
	</target>
	
	<!-- runc target -->
	<target name="runc" depends="build" description="Run the application (console)">
		<java classname="${application.main.class}" classpathref="run.classpath" fork="yes">
			<arg value="console" />
		</java>
	</target>
	
	<!-- git_commit target -->
	<target name="git_commit" description="Commit the code to git">
		<!-- Gets commit message -->
		<input message="Commit message" addproperty="commit-message"/>
		
		<!-- Commits code to local repo -->
		<echo message="Commiting all changes with message ${commit-message}" />
		<git command="add">
			<args>
				<arg value="-A" />
			</args>
		</git>
		<git command="commit">
			<args>
				<arg value="-m ${commit-message}" />
			</args>
		</git>
		
		<!-- Gets User info for Git -->
		<input message="Git username:" addproperty="git.username"/>
		<!-- Problem: Echos back password -->
		<input message="Git password:" addproperty="git.password"/>
			
		<!-- This code hangs when run as ANT target from Eclipse
		
		<input message="Git password:" addproperty="git.password">
			<handler classname="org.apache.tools.ant.input.SecureInputHandler"/>
		</input>
		-->
		
		<!-- Pushes changes to GitHub server -->
		<git command="push">
			<args>
				<arg value="https://${git.username}:${git.password}@github.com/SETeam42014/test.git"/>
			</args>
		</git>
	</target>
	<!-- git_tag target -->
	<target name="git_tag" description="Create tag and synchronize">
		<!-- Create git tag -->
		<input message="Tag name:" addproperty="git.tag.name"/>
		<input message="Tag comment:" addproperty="git.tag.comment"/>
		<git command="tag">
			<args>
				<arg value="-a" />
				<arg value="${git.tag.name}" />
				<arg value="-m" />
				<arg value='"${git.tag.comment}"' />
			</args>
		</git>
		
		<!-- Push tags to server -->
		<!-- Gets User info for Git -->
		<input message="Git username:" addproperty="git.username"/>
		<!-- Problem: Echos back password -->
		<input message="Git password:" addproperty="git.password"/>
		<git command="push">
			<args>
				<arg value="--tags"/>
				<arg value="https://${git.username}:${git.password}@github.com/SETeam42014/test.git"/>
			</args>
		</git>
	</target>
	
	<target name="dbmanager" description="Start the HSQLDB manager">
		<java
	            classname="org.hsqldb.util.DatabaseManagerSwing"
	            classpathref="run.classpath"
	            fork="yes"
	        >
	            <arg line="--user sa --url ${db.url}" />
	        </java>
	    </target>

	<target name="startdb" description="Start the HSQLDB with the default params">
	        <java
	            classname="org.hsqldb.Server"
	            classpathref="run.classpath"
	            fork="yes"
	        >
	            <arg line="-database.0 '${db.file}' -dbname.0 '${db.alias}'" /> 
	        </java>
	</target>
</project>